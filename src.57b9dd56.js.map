{"version":3,"sources":["index.js"],"names":["Tabs","constructor","rootSelector","activeControlClass","activePaneClass","activeTab","_refs","_getRefs","_activeControlClass","_activePaneClass","_activeTabIdx","_setActiveTab","_bindEvents","root","refs","controls","document","querySelector","panes","addEventListener","_onControlsClick","bind","e","preventDefault","target","nodeName","_removeActiveTab","controlItem","classList","add","paneId","_getPaneId","_setActivePane","controlItems","control","querySelectorAll","currenActiveControlItem","remove","_removeActivePane","_getPaneById","getAttribute","slice","id","tabs1"],"mappings":";AAAA,MAAMA,EACFC,aAAY,aACRC,EADQ,mBAERC,EAAqB,SAFb,gBAGRC,EAAkB,SAHV,UAIRC,EAAY,IAEPC,KAAAA,MAAQ,KAAKC,SAASL,GACtBM,KAAAA,oBAAsBL,EACtBM,KAAAA,iBAAmBL,EACnBM,KAAAA,cAAgBL,EAAY,EAE5BM,KAAAA,gBACAC,KAAAA,cAGTL,SAASM,GACCC,MAAAA,EAAO,GAKNA,OAHPA,EAAKC,SAAWC,SAASC,iBAAiBJ,qBAC1CC,EAAKI,MAAQF,SAASC,iBAAiBJ,kBAEhCC,EAGXF,cACSN,KAAAA,MAAMS,SAASI,iBAChB,QACA,KAAKC,iBAAiBC,KAAK,OAInCD,iBAAiBE,GAGTA,GAFJA,EAAEC,iBAEwB,MAAtBD,EAAEE,OAAOC,SACT,OAECC,KAAAA,mBAECC,MAAAA,EAAcL,EAAEE,OACtBG,EAAYC,UAAUC,IAAI,KAAKrB,qBAEzBsB,MAAAA,EAAS,KAAKC,WAAWJ,GAE1BK,KAAAA,eAAeF,GAGxBnB,gBACUsB,MACAC,EADe,KAAK5B,MAAMS,SAASoB,iBAAiB,KAC7B,KAAKzB,eAElCwB,EAAQN,UAAUC,IAAI,KAAKrB,qBAErBsB,MAAAA,EAAS,KAAKC,WAAWG,GAC1BF,KAAAA,eAAeF,GAGxBJ,mBACUU,MAAAA,EAA0B,KAAK9B,MAAMS,SAASE,kBAC5C,KAAKT,uBAGT,IAAC4B,EACD,OAGJA,EAAwBR,UAAUS,OAAO,KAAK7B,qBACxCsB,MAAAA,EAAS,KAAKC,WAAWK,GAC1BE,KAAAA,kBAAkBR,GAG3BE,eAAeF,GACE,KAAKS,aAAaT,GAC1BF,UAAUC,IAAI,KAAKpB,kBAG5B6B,kBAAkBR,GACD,KAAKS,aAAaT,GAC1BF,UAAUS,OAAO,KAAK5B,kBAG/BsB,WAAWG,GACAA,OAAAA,EAAQM,aAAa,QAAQC,MAAM,GAG9CF,aAAaG,GACF,OAAA,KAAKpC,MAAMY,MAAMD,kBAAkByB,MAIlD,MAAMC,EAAQ,IAAI3C,EAAK,CACnBE,aAAc,UACdC,mBAAoB,yBACpBC,gBAAiB,eACjBC,UAAW","file":"src.57b9dd56.js","sourceRoot":"../src","sourcesContent":["class Tabs {\n    constructor({\n        rootSelector,\n        activeControlClass = 'active',\n        activePaneClass = 'active',\n        activeTab = 1,\n    }) {\n        this._refs = this._getRefs(rootSelector);\n        this._activeControlClass = activeControlClass;\n        this._activePaneClass = activePaneClass;\n        this._activeTabIdx = activeTab - 1;\n\n        this._setActiveTab();\n        this._bindEvents();\n    }\n\n    _getRefs(root) {\n        const refs = {};\n\n        refs.controls = document.querySelector(`${root} [data-controls]`);\n        refs.panes = document.querySelector(`${root} [data-panes]`);\n\n        return refs;\n    }\n\n    _bindEvents() {\n        this._refs.controls.addEventListener(\n            'click',\n            this._onControlsClick.bind(this),\n        );\n    }\n\n    _onControlsClick(e) {\n        e.preventDefault();\n\n        if (e.target.nodeName !== 'A') {\n            return;\n        }\n        this._removeActiveTab();\n\n        const controlItem = e.target;\n        controlItem.classList.add(this._activeControlClass);\n\n        const paneId = this._getPaneId(controlItem);\n\n        this._setActivePane(paneId);\n    }\n\n    _setActiveTab() {\n        const controlItems = this._refs.controls.querySelectorAll('a');\n        const control = controlItems[this._activeTabIdx];\n\n        control.classList.add(this._activeControlClass);\n\n        const paneId = this._getPaneId(control);\n        this._setActivePane(paneId);\n    }\n\n    _removeActiveTab() {\n        const currenActiveControlItem = this._refs.controls.querySelector(\n            `.${this._activeControlClass}`,\n        );\n\n        if (!currenActiveControlItem) {\n            return;\n        }\n\n        currenActiveControlItem.classList.remove(this._activeControlClass);\n        const paneId = this._getPaneId(currenActiveControlItem);\n        this._removeActivePane(paneId);\n    }\n\n    _setActivePane(paneId) {\n        const pane = this._getPaneById(paneId);\n        pane.classList.add(this._activePaneClass);\n    }\n\n    _removeActivePane(paneId) {\n        const pane = this._getPaneById(paneId);\n        pane.classList.remove(this._activePaneClass);\n    }\n\n    _getPaneId(control) {\n        return control.getAttribute('href').slice(1);\n    }\n\n    _getPaneById(id) {\n        return this._refs.panes.querySelector(`#${id}`);\n    }\n}\n\nconst tabs1 = new Tabs({\n    rootSelector: '#tabs-1',\n    activeControlClass: 'controls__item--active',\n    activePaneClass: 'pane--active',\n    activeTab: 1,\n});\n"]}